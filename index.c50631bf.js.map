{"mappings":"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","sources":["src/Paddle.ts","src/index.ts","src/Ball.ts","src/Game.ts"],"sourcesContent":["const SPEED = 0.025;\r\n\r\nexport class Paddle {\r\n  constructor(private paddle: HTMLElement) {}\r\n\r\n  get y(): number {\r\n    return parseFloat(getComputedStyle(this.paddle).getPropertyValue('--y'));\r\n  }\r\n\r\n  set y(value: number) {\r\n    this.paddle.style.setProperty('--y', value.toString());\r\n  }\r\n\r\n  rect(): DOMRect {\r\n    return this.paddle.getBoundingClientRect();\r\n  }\r\n\r\n  reset(): void {\r\n    this.y = 50;\r\n  }\r\n\r\n  update(delta: number, ballHeight: number): void {\r\n    this.y += SPEED * delta * (ballHeight - this.y);\r\n  }\r\n}\r\n","import { Ball } from './Ball';\r\nimport { Paddle } from './Paddle';\r\nimport { Game } from './Game';\r\n\r\nconst ball = new Ball(document.getElementById('ball'));\r\nconst game = new Game();\r\nconst playerPaddle = new Paddle(document.getElementById('player-paddle'));\r\nconst enemyPaddle = new Paddle(document.getElementById('enemy-paddle'));\r\n\r\nconst playerScore = document.getElementById('player-score');\r\nconst enemyScore = document.getElementById('enemy-score');\r\n\r\ndocument.addEventListener('mousemove', (e: MouseEvent) => {\r\n  playerPaddle.y = (e.clientY / innerHeight) * 100;\r\n});\r\n\r\nball.reset();\r\n\r\nlet lastTime: number;\r\nfunction update(time: number): void {\r\n  if (lastTime) {\r\n    const delta = time - lastTime;\r\n    if (isLose()) {\r\n      LoseHandler();\r\n    }\r\n    ball.update(delta, [playerPaddle.rect(), enemyPaddle.rect()]);\r\n    enemyPaddle.update(delta, ball.y);\r\n  }\r\n  lastTime = time;\r\n  window.requestAnimationFrame(update);\r\n}\r\n\r\nwindow.requestAnimationFrame(update);\r\n\r\nfunction isLose(): boolean {\r\n  const rect = ball.rect();\r\n  if (rect.left <= 0 || rect.right >= innerWidth) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction LoseHandler(): void {\r\n  const rect = ball.rect();\r\n\r\n  if (rect.left < 0) {\r\n    game.enemyHits();\r\n    enemyScore.innerText = game.enemyScore.toString();\r\n  }\r\n\r\n  if (rect.right > innerWidth) {\r\n    game.playerHits();\r\n    playerScore.innerText = game.playerScore.toString();\r\n  }\r\n\r\n  if (game.isGameEnded()) {\r\n    window.location.reload();\r\n  }\r\n\r\n  playerPaddle.reset();\r\n  enemyPaddle.reset();\r\n  ball.reset();\r\n}\r\n","const INITIAL_VELOCITY = 0.05;\r\nconst VELOCITY_INCREASE = 1.001;\r\n\r\nexport class Ball {\r\n  private direction: { x: number; y: number };\r\n  private velocity: number;\r\n\r\n  constructor(private ball: HTMLElement) {}\r\n\r\n  get x(): number {\r\n    return parseFloat(getComputedStyle(this.ball).getPropertyValue('--x'));\r\n  }\r\n\r\n  get y(): number {\r\n    return parseFloat(getComputedStyle(this.ball).getPropertyValue('--y'));\r\n  }\r\n\r\n  set x(value: number) {\r\n    this.ball.style.setProperty('--x', `${value}`);\r\n  }\r\n\r\n  set y(value: number) {\r\n    this.ball.style.setProperty('--y', `${value}`);\r\n  }\r\n\r\n  rect(): DOMRect {\r\n    return this.ball.getBoundingClientRect();\r\n  }\r\n\r\n  reset(): void {\r\n    this.x = 50;\r\n    this.y = 50;\r\n    this.direction = { x: 0, y: 0 };\r\n    while (Math.abs(this.direction.x) <= 0.2 || this.direction.x >= 0.9) {\r\n      const heading = randomNumberBetween(0, 2 * Math.PI);\r\n      this.direction = { x: Math.cos(heading), y: Math.sin(heading) };\r\n    }\r\n    this.velocity = INITIAL_VELOCITY;\r\n  }\r\n\r\n  update(delta: number, paddleRects: DOMRect[]): void {\r\n    this.x += this.direction.x * this.velocity * delta;\r\n    this.y += this.direction.y * this.velocity * delta;\r\n    const rect = this.rect();\r\n    this.velocity *= VELOCITY_INCREASE;\r\n\r\n    if (rect.bottom >= innerHeight || rect.top <= 0) {\r\n      this.direction.y *= -1;\r\n    }\r\n\r\n    if(paddleRects.some((r) => isCollisionBetween(r, rect))){\r\n        this.direction.x *= -1;\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction randomNumberBetween(min: number, max: number): number {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nfunction isCollisionBetween(a: DOMRect, b: DOMRect): boolean {\r\n    return (\r\n        a.left <= b.right && \r\n        a.right >= b.left && \r\n        a.top <= b.bottom && \r\n        a.bottom >= b.top\r\n    );\r\n}","export class Game {\r\n  private player_score: number = 0;\r\n  private enemy_score: number = 0;\r\n\r\n  private playerWin: boolean = false;\r\n  private enemyWin: boolean = false;\r\n\r\n  private checkWin(): void {\r\n    if (this.player_score > 11) {\r\n      this.playerWin = true;\r\n    }\r\n  }\r\n\r\n  private checkLose(): void {\r\n    if (this.enemy_score > 11) {\r\n      this.enemyWin = true;\r\n    }\r\n  }\r\n\r\n  get playerScore(): number {\r\n    return this.player_score;\r\n  }\r\n\r\n  get enemyScore(): number {\r\n    return this.enemy_score;\r\n  }\r\n\r\n  playerHits(): void {\r\n    this.player_score++;\r\n    this.checkWin();\r\n  }\r\n\r\n  enemyHits(): void {\r\n    this.enemy_score++;\r\n    this.checkLose();\r\n  }\r\n\r\n  isGameEnded(): boolean {\r\n    return this.playerWin || this.enemyWin;\r\n  }\r\n}\r\n"],"names":["$83fc3d49ca93c499$export$8b68b11806a145bb","paddle","y","parseFloat","getComputedStyle","this","getPropertyValue","value","style","setProperty","toString","rect","getBoundingClientRect","reset","update","delta","ballHeight","$e04467055a32edce$var$ball","ball","x","direction","Math","abs","heading","min","max","PI","random","cos","sin","velocity","paddleRects","bottom","innerHeight","top","some","r","$4b312d58db2d7b76$var$isCollisionBetween","b","a","left","right","document","getElementById","$e04467055a32edce$var$game","checkWin","player_score","playerWin","checkLose","enemy_score","enemyWin","playerScore","enemyScore","playerHits","enemyHits","isGameEnded","$e04467055a32edce$var$playerPaddle","$e04467055a32edce$var$enemyPaddle","$e04467055a32edce$var$playerScore","$e04467055a32edce$var$enemyScore","$e04467055a32edce$var$lastTime","addEventListener","e","clientY","window","requestAnimationFrame","$e04467055a32edce$var$update","time","innerWidth","$e04467055a32edce$var$isLose","innerText","location","reload","$e04467055a32edce$var$LoseHandler"],"version":3,"file":"index.c50631bf.js.map"}